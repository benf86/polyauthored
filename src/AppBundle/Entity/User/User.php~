<?php

namespace AppBundle\Entity\User;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use FOS\UserBundle\Entity\User as BaseUser;

/**
 * User
 *
 * @ORM\Table(name="fos_users")
 * @ORM\Entity
 */
class User extends BaseUser
{    
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var  string
     *
     * @ORM\Column(name="name")
     */
    private $name;

    /**
     * @ORM\ManyToMany(targetEntity="AppBundle\Entity\World\World", mappedBy="moderators", fetch="EAGER")
     */
    private $worldsModerating;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\World\World", mappedBy="owner", fetch="EAGER")
     */
    private $worldsOwning;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\World\WorldEntity", mappedBy="owner", fetch="EAGER")
     */
    private $entitiesOwning;

    /**
     * @var integer
     * 
     * @ORM\Column(name="points", type="bigint", nullable=true)
     */
    private $points;

    /**
     * @var  boolean
     *
     * @ORM\Column(name="shadowbanned", type="boolean")
     */

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set points
     *
     * @param integer $points
     * @return User
     */
    public function setPoints($points)
    {
        $this->points = $points;

        return $this;
    }

    /**
     * Get points
     *
     * @return integer 
     */
    public function getPoints()
    {
        return $this->points;
    }

    /**
     * Add worldsModerating
     *
     * @param \AppBundle\Entity\World\World $worldsModerating
     * @return User
     */
    public function addWorldsModerating(\AppBundle\Entity\World\World $worldsModerating)
    {
        $this->worldsModerating[] = $worldsModerating;

        return $this;
    }

    /**
     * Remove worldsModerating
     *
     * @param \AppBundle\Entity\World\World $worldsModerating
     */
    public function removeWorldsModerating(\AppBundle\Entity\World\World $worldsModerating)
    {
        $this->worldsModerating->removeElement($worldsModerating);
    }

    /**
     * Get worldsModerating
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getWorldsModerating()
    {
        return $this->worldsModerating;
    }

    /**
     * Add worldsOwning
     *
     * @param \AppBundle\Entity\World\World $worldsOwning
     * @return User
     */
    public function addWorldsOwning(\AppBundle\Entity\World\World $worldsOwning)
    {
        $this->worldsOwning[] = $worldsOwning;

        return $this;
    }

    /**
     * Remove worldsOwning
     *
     * @param \AppBundle\Entity\World\World $worldsOwning
     */
    public function removeWorldsOwning(\AppBundle\Entity\World\World $worldsOwning)
    {
        $this->worldsOwning->removeElement($worldsOwning);
    }

    /**
     * Get worldsOwning
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getWorldsOwning()
    {
        return $this->worldsOwning;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return User
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }
}
